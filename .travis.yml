language: cpp

branches:
  only:
    - master

sudo: true

env:
  global:
    - CC_GCC_OSX=/usr/local/bin/gcc-9
    - CXX_GCC_OSX=/usr/local/bin/g++-9
    - CC_CLANG_LINUX=clang-9
    - CXX_CLANG_LINUX=clang++-9
    - OSX_IMAGE=xcode11

before_cache: ci/before-cache.sh

cache:
  directories:
    # For Homebrew's formulae on macOS.
    - $HOME/Library/Caches/Homebrew

before_install: source ci/before-install.sh

install: ci/install.sh

matrix:
  include:
    - name: GCC 9.1
      os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-9
      script:
        - ./build.sh --system
        - ./run_tests.sh
      env:
        - CC=gcc-9
        - CXX=g++-9

    - name: Clang 9.0
      os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - jonathonf-llvm-9
          packages:
            - g++-9
            - clang-9
      script:
        - ./build.sh --system
        - ./build.sh --android
        - ./run_tests.sh
      env:
        - CC=$CC_CLANG_LINUX
        - CXX=$CXX_CLANG_LINUX
        - BUILD_ANDROID=true

    - name: GCC 9.2
      os: osx
      osx_image: xcode11
      script:
        - ./build.sh --system
        - ./run_tests.sh
      env:
        - CC=$CC_GCC_OSX
        - CXX=$CXX_GCC_OSX

    - name: AppleClang 11.0 + coverage
      os: osx
      osx_image: xcode11
      before_install:
        # Necessary to publish the coverage on coveralls.
        - gem install coveralls-lcov
      script:
        - ./build.sh --system
        - ./build.sh --android
        - ./build.sh --ios
        - ./run_tests.sh --coverage-raw
        # Publish the coverage results to Coveralls.io.
        - coveralls-lcov build/tests/out/coverage/filtered.info
      env:
        - CC=clang
        - CXX=clang++
        - BUILD_ANDROID=true
        - RUN_TESTS_WITH_COVERAGE=true