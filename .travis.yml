branches:
  only:
    - master

sudo: true

before_cache: ci/before-cache.sh

# Default Xcode version when "os" is "osx".
osx_image: xcode11.2
# Default Linux distribution when "os" is "linux".
dist: xenial

cache:
  directories:
    # Cache the Homebrew's downloaded bottles on macOS.
    - $HOME/Library/Caches/Homebrew

jobs:
  include:
    - stage: build
      name: GCC 6.5
      os: linux
      addons:
        apt:
          sources:
            # It contains the g++-6 package.
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      script:
        - ./build.sh --system
        - ./run_tests.sh
      env:
        - CC=gcc-6
        - CXX=g++-6
    - name: GCC 7.4
      os: linux
      addons:
        apt:
          sources:
            # It contains the g++-7 package.
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      script:
        - ./build.sh --system
        - ./run_tests.sh
      env:
        - CC=gcc-7
        - CXX=g++-7

    - name: GCC 8.3
      os: linux
      addons:
        apt:
          sources:
            # It contains the g++-8 package.
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      script:
        - ./build.sh --system
        - ./run_tests.sh
      env:
        - CC=gcc-8
        - CXX=g++-8

    - name: GCC 9.1
      os: linux
      addons:
        apt:
          sources:
            # It contains the g++-9 package.
            - ubuntu-toolchain-r-test
          packages:
            - g++-9
      script:
        - ./build.sh --system
        - ./run_tests.sh
      env:
        - CC=gcc-9
        - CXX=g++-9

    - name: Clang 3.9
      os: linux
      addons:
        apt:
          sources:
            # It contains the g++-6 package.
            - ubuntu-toolchain-r-test
            - llvm-toolchain-xenial-3.9
          packages:
            - g++-6
            - clang-3.9
      script:
        - ./build.sh --system
        - ./run_tests.sh
      env:
        - CC=clang-3.9
        - CXX=clang++-3.9

    - name: Clang 4.0
      os: linux
      addons:
        apt:
          sources:
            # It contains the g++-6 package.
            - ubuntu-toolchain-r-test
            - llvm-toolchain-xenial-4.0
          packages:
            - g++-6
            - clang-4.0
      script:
        - ./build.sh --system
        - ./run_tests.sh
      env:
        - CC=clang-4.0
        - CXX=clang++-4.0

    - name: Clang 5.0
      os: linux
      addons:
        apt:
          sources:
            # It contains the g++-6 package.
            - ubuntu-toolchain-r-test
            - llvm-toolchain-xenial-5.0
          packages:
            - g++-6
            - clang-5.0
      script:
        - ./build.sh --system
        - ./run_tests.sh
      env:
        - CC=clang-5.0
        - CXX=clang++-5.0

    - name: Clang 6.0
      os: linux
      addons:
        apt:
          sources:
            # It contains the g++-6 package.
            - ubuntu-toolchain-r-test
            - llvm-toolchain-xenial-6.0
          packages:
            - g++-6
            - clang-6.0
      script:
        - ./build.sh --system
        - ./run_tests.sh
      env:
        - CC=clang-6.0
        - CXX=clang++-6.0

    - name: Clang 7.0 - Clang++ 7.1
      os: linux
      addons:
        apt:
          sources:
            # It contains the g++-7 package.
            - ubuntu-toolchain-r-test
            - llvm-toolchain-xenial-7
          packages:
            - g++-7
            - clang-7
      script:
        - ./build.sh --system
        - ./run_tests.sh
      env:
        - CC=clang-7
        - CXX=clang++-7

    - name: Clang 8.0
      os: linux
      addons:
        apt:
          sources:
            # It contains the g++-8 package.
            - ubuntu-toolchain-r-test
            - llvm-toolchain-xenial-8
          packages:
            - g++-8
            - clang-8
      script:
        - ./build.sh --system
        - ./run_tests.sh
      env:
        - CC=clang-8
        - CXX=clang++-8

    - name: Clang 9.0
      os: linux
      before_install:
        - source ci/install-android-ndk.sh
        # It contains the g++-9 package.
        - sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
        # Add the Clang 9 repository following the instructions at https://apt.llvm.org/.
        - wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        - sudo add-apt-repository 'deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-9 main' -y
        - sudo apt-get update
        - sudo apt-get install g++-9
        - sudo apt-get install clang-9
      script:
        - ./build.sh --system
        - ./build.sh --android
        - ./run_tests.sh
      env:
        - CC=clang-9
        - CXX=clang++-9

    - name: GCC 6.5
      os: osx
      addons:
        homebrew:
          packages:
            - gcc@6
      script:
        - ./build.sh --system
        - ./run_tests.sh
      env:
        - CC=/usr/local/bin/gcc-6
        - CXX=/usr/local/bin/g++-6

    - name: GCC 7.4
      os: osx
      addons:
        homebrew:
          packages:
            - gcc@7
      script:
        - ./build.sh --system
        - ./run_tests.sh
      env:
        - CC=/usr/local/bin/gcc-7
        - CXX=/usr/local/bin/g++-7

    - name: GCC 8.3
      os: osx
      addons:
        homebrew:
          packages:
            - gcc@8
      script:
        - ./build.sh --system
        - ./run_tests.sh
      env:
        - CC=/usr/local/bin/gcc-8
        - CXX=/usr/local/bin/g++-8

    - name: GCC 9.2
      os: osx
      addons:
        homebrew:
          packages:
            - gcc@9
      script:
        - ./build.sh --system
        - ./run_tests.sh
      env:
        - CC=/usr/local/bin/gcc-9
        - CXX=/usr/local/bin/g++-9

    - name: AppleClang 8.1
      os: osx
      osx_image: xcode8.3
      addons:
        homebrew:
          packages:
            # The CMake version should be updated for the iOS build.
            - cmake
          update: true
      before_install:
        - source ci/install-android-ndk.sh
      script:
        - ./build.sh --system
        - ./build.sh --android
        - ./build.sh --ios
        - ./run_tests.sh
      env:
        - CC=clang
        - CXX=clang++

    - name: AppleClang 9.1
      os: osx
      osx_image: xcode9.4
      addons:
        homebrew:
          packages:
            # The CMake version should be updated for the iOS build.
            - cmake
          update: true
      before_install:
        - source ci/install-android-ndk.sh
      script:
        - ./build.sh --system
        - ./build.sh --android
        - ./build.sh --ios
        - ./run_tests.sh
      env:
        - CC=clang
        - CXX=clang++

    - name: AppleClang 10.0
      os: osx
      osx_image: xcode10.3
      before_install:
        - source ci/install-android-ndk.sh
      script:
        - ./build.sh --system
        - ./build.sh --android
        - ./build.sh --ios
        - ./run_tests.sh
      env:
        - CC=clang
        - CXX=clang++

    - name: AppleClang 11.0
      os: osx
      osx_image: xcode11.2
      before_install:
        - source ci/install-android-ndk.sh
      script:
        - ./build.sh --system
        - ./build.sh --android
        - ./build.sh --ios
        - ./run_tests.sh
      env:
        - CC=clang
        - CXX=clang++

    - stage: coverage
      name: Measure and upload code coverage on Coveralls
      os: osx
      osx_image: xcode11.2
      addons:
        homebrew:
          packages:
            - lcov
      before_install:
        # Necessary to publish the coverage on coveralls.
        - gem install coveralls-lcov
      script:
        - ./run_tests.sh --coverage=raw --gcov-tool=$TRAVIS_BUILD_DIR/gcov/xcrun-llvm-cov-gcov.sh
        # Publish the coverage results to Coveralls.io.
        - coveralls-lcov build/tests/out/coverage/filtered.info
      env:
        - CC=clang
        - CXX=clang++