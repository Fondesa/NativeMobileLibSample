#language: cpp
#compiler: clang
os: osx
osx_image: xcode10.2

branches:
  only:
    - master
#
#env:
#  - CC_GCC=/usr/local/bin/gcc-8
#  - CXX_GCC=/usr/local/bin/g++-8
#  - CC_CLANG=clang
#  - CXX_CLANG=clang++

jobs:
  include:
    # The build stage will build the library for Darwin, Android and iOS.
    - stage: build
      name: Target=Darwin; Compiler=GCC-8
      script:
        - which gcc;
        - gcc --version;
        - ./build.sh --darwin
      env:
        - CC="/usr/local/bin/gcc-8"
        - CXX="/usr/local/bin/g++-8"
    - name: Target=Darwin; Compiler=Clang-10
      script:
        - which gcc;
        - gcc --version;
        - ./build.sh --darwin
      env:
        - CC=clang
        - CXX=clang++
    # The Android compiler is given by the NDK toolchain file.
    - name: Target=Android; Compiler=NDK-Based
      script:
        - which gcc;
        - gcc --version;
        - ./build.sh --android
      env:
        - BUILD_ANDROID=true
    - name: Target=iOS; Compiler=GCC-8
      script:
        - which gcc;
        - gcc --version;
        - ./build.sh --ios
      env:
        - CC="/usr/local/bin/gcc-8"
        - CXX="/usr/local/bin/g++-8"
    - name: Target=iOS; Compiler=Clang-10
      script:
        - which gcc;
        - gcc --version;
        - ./build.sh --ios
      env:
        - CC=clang
        - CXX=clang++
    # The test stage will run all the tests and it will calculate the coverage.
    - stage: test
      name: Compiler=GCC-8
      script:
        - gem install coveralls-lcov
        - ./run_tests.sh --coverage-raw
        - coveralls-lcov build/tests/out/coverage/filtered.info
      env:
        - CC="/usr/local/bin/gcc-8"
        - CXX="/usr/local/bin/g++-8"
        - RUN_TESTS_WITH_COVERAGE=true
    - stage: test
      name: Compiler=Clang-10
      script:
        - gem install coveralls-lcov
        - ./run_tests.sh --coverage-raw
        - coveralls-lcov build/tests/out/coverage/filtered.info
      env:
        - CC=clang
        - CXX=clang++
        - RUN_TESTS_WITH_COVERAGE=true

before_install:
  # The Android NDK toolchain file is needed to build the library for Android so, before building, Travis will download
  # the NDK R20, unzip them and export their path to use it inside the build script.
  - if [[ "$BUILD_ANDROID" == "true" ]]; then
    curl https://dl.google.com/android/repository/android-ndk-r20-darwin-x86_64.zip -o ndk-r20.zip;
    unzip -q ndk-r20.zip;
    export ANDROID_NDK=android-ndk-r20;
    fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]] && [[ "$CC" == "gcc-8" ]]; then
    HOMEBREW_NO_AUTO_UPDATE=1 brew install gcc;
    fi

install:
  # Install LCOV only when the tests are run with coverage.
  # This is optimal since we don't want to install it in jobs which don't use it.
  - if [[ "$RUN_TESTS_WITH_COVERAGE" == "true" ]]; then
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    HOMEBREW_NO_AUTO_UPDATE=1 brew install lcov;
    else
    echo "Only OSX is supported";
    exit 1;
    fi
    fi
